{"version":3,"sources":["webpack://src/styles/app.scss","webpack://src/styles/navbar.scss","webpack://src/styles/include-media.scss","webpack://src/styles/intro.scss","webpack://src/styles/about.scss","webpack://src/styles/scrollToTop.scss","webpack://src/styles/experience.scss","webpack://src/styles/projects.scss","webpack://src/styles/contact.scss","webpack://src/styles/footer.scss"],"names":[],"mappings":"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","file":"main.6df42623.chunk.css","sourcesContent":["@import \"./include-media.scss\";\n\n* {\n  font-family: 'Montserrat', sans-serif;\n  margin: 0;\n  box-sizing: border-box;\n}\n\n.app {\n  .sections {\n    width: 100%;\n    height: 100%;\n\n    scroll-behavior: smooth;\n    scroll-snap-type: y proximity;\n    scrollbar-width: none;\n    &::-webkit-scrollbar {\n      display: none;\n    }\n    \n    > * {\n      width: 100%;\n      height: 100%;\n      scroll-snap-align: start;\n    }\n\n  }\n}","@use \"../styles/include-media.scss\" as *;\n\n// DESKTOP\n.navbar {\n  width: 100%;\n  height: 100px;\n  background-color: white;\n  padding-top: 2rem;\n}\n\n.wrapper {\n  display: flex;\n  align-items: center;\n  color: black;\n\n  .logoTitle {\n    margin-left: 1rem;\n    text-decoration: none;\n    color: inherit;\n    font-size: 1.5rem;\n    font-weight: 700;\n\n    @include media(\">=tablet\", \"<smdesktop\") { \n      margin-left: 2rem;\n      font-size: 2.2rem;\n    }\n\n    @include media(\">=smdesktop\", \"<=4k\") { \n      margin-left: 5rem;\n      font-size: 2.6rem;\n    }\n  }\n\n  .navLinks {\n    ul {\n      display: flex;\n      margin-right: 5rem;\n      list-style: none;\n\n      li {\n        align-items: center;\n        font-size: 1.2rem;\n        padding: 0rem 2.3rem;\n\n        a {\n          text-decoration: none;\n          color: inherit;\n\n          &::after {\n            content: '';\n            display: block;\n            border-bottom: 3px solid #008c8c; \n            transform: scaleX(0);  \n            transition: transform 230ms ease-in-out;\n          }\n  \n          &:hover::after {\n            transform: scaleX(1);\n          } \n        }\n      }\n    }\n  }\n\n  .menu-icon {\n    position: absolute;\n    right: 50px;\n    z-index: 2;\n    top: 4%;\n    cursor: pointer;\n\n    @include media(\">=tablet\", \"<=smdesktop\") {\n      right: 70px;\n      top: 6%;\n    }\n  }\n\n\n  // MOBILE\n  .navbarMobileActive {\n    height: 400px;\n    width: 100%;\n    background-color: #008c8c;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 1.2rem;\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    text-align: center;\n    transition: all 0.6s ease-in-out;\n    z-index: 1;\n\n    ul {\n      list-style: none;\n      padding-left: 0;\n      li {\n        padding: 1.5rem;\n        a {\n          color: white;\n          text-decoration: none;\n        }\n      }\n    }\n\n    @include media (\">=tablet\", \"<smdesktop\") {\n      height: 500px;\n      font-size: 1.4rem;\n      transition: all 0.7s ease-in-out;\n\n      ul {\n        li {\n          padding: 2.5rem;\n        }\n      }\n    }\n  }\n\n  .navbarMobile {\n    height: 400px;\n    width: 100%;\n    background-color: #008c8c;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 1.2rem;\n    position: absolute;\n    top: 0px;\n    left: -100%;\n    text-align: center;\n    transition: all 0.6s ease-in-out;\n    z-index: 1;\n    opacity: 0.6;\n\n    ul {\n      list-style: none;\n      padding-left: 0;\n      li {\n        padding: 1.5rem;\n        a {\n          color: white;\n          text-decoration: none;\n        }\n      }\n    }\n\n    @include media (\">=tablet\", \"<smdesktop\") {\n      height: 500px;\n      font-size: 1.4rem;\n      transition: all 0.7s ease-in-out;\n\n      ul {\n        li {\n          padding: 2.5rem;\n        }\n      }\n    }\n  }\n\n  @include media(\">=desktop\", \"<=4k\") {\n    padding-top: 1rem;\n    justify-content: space-between;\n  }\n}\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//        https://eduardoboucas.github.io/include-media\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  \"phone\": 320px,\n  \"lgphone\": 425px,\n  \"tablet\": 768px,\n  \"desktop\": 1024px,\n  \"smdesktop\": 1280px,\n  \"mddesktop\": 1440px,\n  \"lgdesktop\": 1920px,\n  \"4k\": 2560px,\n) !default;\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  \"screen\": \"screen\",\n  \"print\": \"print\",\n  \"handheld\": \"handheld\",\n  \"landscape\": \"(orientation: landscape)\",\n  \"portrait\": \"(orientation: portrait)\",\n  \"retina2x\":\n    \"(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)\",\n  \"retina3x\":\n    \"(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)\",\n) !default;\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  \"px\": 1,\n  \"em\": 0.01,\n  \"rem\": 0.1,\n  \"\": 0,\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: \"desktop\" !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: (\"screen\", \"portrait\", \"landscape\") !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists(\"at-error\") {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {\n  }\n}\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {\n}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log(\"`#{$im-no-media-breakpoint}` is not a valid breakpoint.\") {\n    }\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == \"max\" and $value <= $no-media-breakpoint-value) or\n        ($prefix == \"min\" and $value > $no-media-breakpoint-value)\n      {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in (\">=\", \">\", \"<=\", \"<\", \"≥\", \"≤\") {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log(\"No operator found in `#{$expression}`.\");\n}\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: \"width\";\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index((\"<\", \"<=\", \"≤\"), $operator), \"max\", \"min\");\n}\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log(\"Unknown unit `#{unit($value)}`.\");\n  }\n\n  @if $operator == \">\" {\n    $value: $value + $interval;\n  } @else if $operator == \"<\" {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return \"(#{$prefix}-#{$dimension}: #{$value})\";\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == \"number\" {\n    @return $value;\n  } @else if type-of($value) != \"string\" {\n    $_: im-log(\"Value for `to-number` should be a number or a string.\");\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == \"-\");\n  $numbers: (\n    \"0\": 0,\n    \"1\": 1,\n    \"2\": 2,\n    \"3\": 3,\n    \"4\": 4,\n    \"5\": 5,\n    \"6\": 6,\n    \"7\": 7,\n    \"8\": 8,\n    \"9\": 9,\n  );\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == \"+\" or $first-character == \"-\") {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not(index(map-keys($numbers), $character) or $character == \".\") {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i));\n    }\n\n    @if $character == \".\" {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: (\n    \"px\": 1px,\n    \"cm\": 1cm,\n    \"mm\": 1mm,\n    \"%\": 1%,\n    \"ch\": 1ch,\n    \"pc\": 1pc,\n    \"in\": 1in,\n    \"em\": 1em,\n    \"rem\": 1rem,\n    \"pt\": 1pt,\n    \"ex\": 1ex,\n    \"vw\": 1vw,\n    \"vh\": 1vh,\n    \"vmin\": 1vmin,\n    \"vmax\": 1vmax,\n  );\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log(\"Invalid unit `#{$unit}`.\");\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge(\n    $media-expressions,\n    $tweak-media-expressions\n  ) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and length($conditions) == 0) or\n    (not $im-media-support and im-intercepts-static-breakpoint($conditions...))\n  {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}","@use \"../styles/include-media.scss\" as *;\n\n.intro {\n  .content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    text-align: justify;\n    height: 100vh;\n    padding: 2rem;\n\n\n    @include media(\">=tablet\", \">=desktop\") { \n      padding-left: 5rem;\n      text-align: left;\n\n      h1 {\n        font-size: 3.5rem;\n      }\n    }\n  }\n\n  span {\n    width: 100%;\n\n    a {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: 40px;\n      background-color: #008c8c;\n      color: white;\n      border: 2px solid #008c8c;\n      border-radius: 10px;\n      margin-top: 2rem;      \n      text-decoration: none;\n      font-size: 1.2rem;\n    }\n\n    @include media(\">=tablet\", \"<desktop\") {\n      margin-top: 1rem;\n\n      a {\n        width: 35%;\n        height: 50px;\n      }\n    }\n\n    @include media(\">=desktop\", \"<=4k\") {\n      a {\n        width: 25%;\n        background: linear-gradient(to right, white 34%, #008c8c 65%);\n        background-size: 300% 100%;\n        background-position: right bottom;\n        transition: all .5s ease-out;\n\n        &:hover {\n          color: #008c8c;\n          background-position: left bottom;\n        }\n      }\n    }\n  }\n\n}","@use \"../styles/include-media.scss\" as *;\n\n.about {\n  .title {\n    padding-top: 0.5rem;\n    text-align: center;\n\n    h1 {\n      font-size: 2.5rem;\n      font-weight: 400;\n    }\n\n    @include media(\">=tablet\", \"<smdesktop\") {\n      padding-bottom: 1rem;\n\n      h1 {\n        font-size: 3.3rem;\n      }\n    }\n\n    @include media(\">=smdesktop\", \"<=4k\") {\n      text-align: left;\n\n      h1 {\n        font-size: 3.2rem;\n      }\n\n    }\n\n  }\n\n  .content-container {\n    display: grid;\n    grid-template-columns: auto;\n    padding: 0 0.5rem 0.5rem 0.5rem;\n\n    .left-side {\n      display: grid;\n      // grid-template-columns: 13% 87%;\n      grid-template-columns: auto auto;\n      align-items: center;\n      padding: 1rem 1rem 1rem 0;\n      line-height: 1.4;\n      word-spacing: 2px;\n\n      h1 {\n        align-items: center;\n        padding: 2px 2px 2px 0;\n      }\n\n      p {\n        display: flex;\n        align-items: end;\n        color: #008c8c;\n        font-size: 1rem;\n        padding: 0.5rem 0 0.5rem 0;\n        text-align: justify;\n      }\n\n      @include media(\">=tablet\", \"<smdesktop\") {\n        padding: 0 2rem;\n      }\n    }\n\n    @include media(\">=tablet\", \"<smdesktop\") {\n      grid-template-columns: auto;\n      gap: 3rem;\n      margin-top: 0.5rem;\n      padding-left: 2rem;\n      padding-right: 4rem;\n\n      .left-side {\n        grid-template-columns: 7% 93%;\n        line-height: 1.3;\n  \n        p {\n          font-size: 1.3rem;\n          padding: 1.5rem 0 1.5rem 0;\n        }\n      }\n    }\n\n    @include media(\">=smdesktop\", \"<=4k\") {\n      grid-template-columns: 50% 50%;\n      margin-top: 0.5rem;\n      padding-left: 4.5rem;\n      padding-right: 6.5rem;\n\n      .left-side {\n        grid-template-columns: 7% 93%;\n  \n        p {\n          font-size: 1.3rem;\n          padding: 1.7rem 0 1.7rem 0;\n        }\n      }\n    }\n  }\n\n  .right-side {\n    text-align: center;\n\n    p {\n      color: #008c8c;\n      font-size: 1.3rem;\n    }\n\n    .skills-grid {\n      display: grid;\n      grid-template-columns: repeat(3, 1fr);\n      gap: 0.5rem;\n      padding-top: 1rem;\n\n      .skills {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        text-align: center;\n        transition: transform .5s;\n\n        img {\n          height: 3rem;\n          width: 3rem;\n          padding-top: 2px;\n        }\n\n        p {\n          padding-top: 8px;\n          font-size: 0.8rem;\n        }\n\n        @include media(\">=tablet\", \"<=4k\") {\n          padding-bottom: 0.5rem;\n\n          &:hover {\n            -ms-transform: scale(1.1); /* IE 9 */\n            -webkit-transform: scale(1.1); /* Safari 3-8 */\n            transform: scale(1.1); \n          }\n\n          img {\n            height: 5rem;\n            width: 5rem;\n            padding-top: 2px;\n          }\n\n          p {\n            padding-top: 1rem;\n          }\n        }\n      }\n\n      @include media(\">=tablet\", \"<=4k\") {\n        grid-template-columns: repeat(5, 1fr);\n        gap: 1rem;\n      }\n    }\n\n    @include media(\">=tablet\", \">desktop\") {\n      grid-row: span 2;\n      padding: 2rem 1.5rem 1.5rem 1.5rem;\n    }\n  }\n}",".up-arrow {\n  .arrow {\n    position: fixed;\n    height: 4.5rem;\n    width: 4.5rem;\n    right: 3%;\n    bottom: 3%;\n    z-index: 1;\n    background-color: #e6e6e6;\n    border-radius: 100%;\n  }\n}","@use \"../styles/include-media.scss\" as *;\n\n.experience {\n  margin-top: 3rem;\n  .title {\n    text-align: center;\n    h1 {\n      font-size: 2.5rem;\n      font-weight: 400;\n    }\n\n    @include media(\">=tablet\", \">=mddesktop\") {\n      h1 {\n        font-size: 3.3rem;\n        margin-left: 5rem;\n        text-align: left;\n        padding-bottom: 0.5rem;\n      }\n    }\n  }\n}","@use \"../styles/include-media.scss\" as *;\n\n.projects {\n  display: grid;\n  grid-template-columns: auto;\n  row-gap: 3rem;\n  padding: 3rem 0 5rem 0;\n  place-items: center;\n\n  .container {\n    height: 290px;\n\n    .item {\n      width: 340px;\n      height: 100%;\n      border-radius: 10px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      overflow: hidden;\n      position: relative;\n      transition: opacity 0.8s ease-in-out;\n      transition: background-color 0.8s ease-in-out;\n      box-shadow: 0.5rem 0.5rem 2rem 0 rgba(0, 0, 0, 0.2);\n\n      img {\n        height: 340px;\n        width: 340px;\n      }\n\n      .contentMobile {\n        position: absolute;\n        bottom: 0;\n        background-color: #008c8c;\n        width: 100%;\n        height: 45%;\n        opacity: 0.95;\n\n        h1 {\n          padding-top: 5px;\n          text-align: center;\n          color: white;\n        }\n\n        p {\n          display: none;\n        }\n\n        .buttons {\n          width: 100%;\n          display: flex;\n          justify-content: space-evenly;\n          position: absolute;\n          padding: 1rem;\n          bottom: 5px;\n\n          button {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 145px;\n            font-size: 0.7rem;\n            padding: 5px 10px;\n            color: white;\n            background-color: transparent;\n            border: 2px solid white;\n            border-radius: 10px;\n            font-weight: 500;\n            text-transform: uppercase;\n            cursor: pointer;\n          }\n        }\n      }\n\n    }\n\n    @include media(\">=tablet\", \"<smdesktop\") {\n      height: 350px;\n\n      .item {\n        width: 450px;\n\n        img {\n          height: 450px;\n          width: 450px;\n        }\n\n        .content {\n          position: absolute;\n          bottom: 0;\n          background-color: #008c8c;\n          width: 100%;\n          height: 35%;\n          opacity: 0.95;\n  \n          h1 {\n            padding-top: 5px;\n            text-align: center;\n            color: white;\n          }\n  \n          p {\n            display: none;\n          }\n  \n          .buttons {\n            width: 100%;\n            display: flex;\n            justify-content: space-evenly;\n            position: absolute;\n            padding: 1rem;\n            bottom: 5px;\n  \n            button {\n              display: flex;\n              align-items: center;\n              justify-content: center;\n              width: 145px;\n              font-size: 0.7rem;\n              padding: 5px 10px;\n              color: white;\n              background-color: transparent;\n              border: 2px solid white;\n              border-radius: 10px;\n              font-weight: 500;\n              text-transform: uppercase;\n              cursor: pointer;\n            }\n          }\n        }\n      }\n    }\n\n    @include media(\">=smdesktop\", \"<=4k\") {\n      height: 350px;\n\n      .item {\n        width: 500px;\n\n        img {\n          height: 450px;\n          width: 450px;\n        }\n\n        .content {\n          display: none;\n        }\n\n        &:hover {\n          background-color: #008c8c;\n          opacity: 0.8;\n  \n          .content {\n            display: flex;\n            flex-direction: column;\n            position: absolute;\n            align-items: center;\n            background-color: #008c8c;\n            color: white;\n            height: 100%;\n            width: 100%;\n            opacity: 0.95;\n            padding: 0 1.5rem;\n  \n            h1 {\n              margin-top: 45px;\n              padding: 1rem;\n            }\n  \n            p {\n              text-align: justify;\n              line-height: 1.6;\n              font-size: 1.1rem;\n            }\n  \n            .buttons {\n              width: 100%;\n              display: flex;\n              justify-content: space-evenly;\n              position: absolute;\n              padding: 1rem;\n              bottom: 10px;\n  \n              button {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                width: 200px;\n                font-size: 0.9rem;\n                padding: 10px 15px;\n                color: white;\n                border: 2px solid white;\n                border-radius: 10px;\n                font-weight: 500;\n                text-transform: uppercase;\n                cursor: pointer;\n\n                background: linear-gradient(to right, white 34%, #008c8c 65%);\n                background-size: 300% 100%;\n                background-position: right bottom;\n                transition: all .5s ease-out;\n  \n                &:hover {\n                  color: #008c8c;\n                  background-position: left bottom;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  @include media(\">=desktop\", \"<=4k\") {\n    grid-template-columns: auto auto;\n  }\n}\n\n.title {\n  text-align: center;\n  padding-top: 1rem;\n\n  h1 {\n    font-size: 2.5rem;\n    font-weight: 400;\n  }\n\n  @include media(\">=desktop\", \"<=4k\") {\n    h1 {\n      font-size: 3.3rem;\n      margin-left: 5rem;\n      text-align: left;\n      padding-bottom: 0.5rem;\n    }\n  }\n}\n","@use \"../styles/include-media.scss\" as *;\n\n.contact {\n  h1 {\n    text-align: center;\n    font-weight: 400;\n    font-size: 3rem;\n  }\n\n  .container {\n    display: flex;\n    color: #008c8c;\n    justify-content: center;\n\n    .left {\n      p {\n        padding: 2rem 1rem;\n        text-align: center;\n        font-size: 1.1rem;\n      }\n\n      span {\n        display: flex;\n        justify-content: center;\n\n        a {\n          display: flex;\n          align-items: center;\n          color: #008c8c;\n          padding-bottom: 1rem;\n          font-size: 1.2rem;\n          text-decoration: none;\n        }\n      }\n    }\n\n    img {\n      height: 0;\n      width: 0;\n    }\n  }\n\n  @include media(\">=tablet\", \"<smdesktop\") {\n    .container {\n      .left {\n        p {\n          font-size: 1.4rem;\n        }\n\n        span {\n          padding-bottom: 1rem;\n          \n          a {\n            font-size: 1.6rem;\n          }\n        }\n      }\n    }\n  }\n\n  @include media(\">=smdesktop\", \"<=4k\") {\n    h1 {\n      margin-left: 5rem;\n      text-align: left;\n      font-size: 3.3rem;\n    }\n\n    .container {\n      .left {\n        margin-top: 5rem;\n        margin-left: 4rem;\n        flex: 1 1;\n\n        p {\n          font-size: 1.5rem;\n          text-align: left;\n        }\n\n        span {\n        display: flex;\n        justify-content: start;\n\n          a {\n            display: flex;\n            align-items: center;\n            padding-left: 1rem;\n            padding-top: 1rem;\n            font-size: 2rem;\n          }\n\n          &:hover {\n            a {\n              color: black;\n            }\n\n            color: black;\n            font-weight: 500;\n          }\n        }\n      }\n  \n      .right {\n        flex: 1 1;\n        padding-left: 4rem;\n\n        img {\n          height: 450px;\n          width: 450px;\n        }\n      }\n    }\n  }\n\n}","@use \"../styles/include-media.scss\" as *;\n\n.footer-container {\n  width: 100vw;\n  // background-color: white;\n  background-color: #008c8c;\n  // position: absolute;\n  bottom: 0px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  // color: #008c8c;\n  color: white;\n  font-size: 1rem;\n  font-weight: 500;\n\n  .right {\n    display: flex;\n    align-items: center;\n\n    a {\n      padding: 0.5rem;\n\n      img {\n        height: 1.7rem;\n        width: 1.7rem;\n      }\n    }\n\n    @include media(\">=lgphone\", \"<=desktop\") {\n      a {\n        padding-top: 1rem;\n\n        img {\n          height: 1.7rem;\n          width: 1.7rem;\n          transition: transform .5s;\n\n          &:hover {\n            -ms-transform: scale(1.5); /* IE 9 */\n            -webkit-transform: scale(1.5); /* Safari 3-8 */\n            transform: scale(1.5); \n          }\n        }\n      }\n    }\n  }\n\n  .left {\n    display: flex;\n    padding-top: 5px;\n  }\n\n  @include media(\">=tablet\", \"<=4k\") {\n    height: 3.3rem;\n    justify-content: space-between;\n    flex-direction: row;\n\n    .left {\n      padding-bottom: 5px;\n      padding-left: 1rem;\n    }\n\n    .right {\n      width: 15%;\n      justify-content: space-evenly;\n\n      a {\n        img {\n          height: 1.7rem;\n          width: 1.7rem;\n          transition: transform .5s;\n    \n          &:hover {\n            -ms-transform: scale(1.5); /* IE 9 */\n            -webkit-transform: scale(1.5); /* Safari 3-8 */\n            transform: scale(1.5); \n          }\n\n        }\n      }\n    }\n  }\n\n}"]}